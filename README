### Repository Setup ###
data/
    Op3176_DefectMap/       (2000 images from previous 2 years)
    Op3176_DefectMap2/      (500 images sampled from above, testing)
    Op3176_DefectMap_Labeled/
        Label_*/
        Noise/
        Unlabeled/
outputs/
    v*/                     (correspond to mains)
        checkpoints/        (pytorch models, not saved)
        diagnostics/        (additional testing)
        figures/            (primary figures: loss, clustering, etc.)
        results/            (all clustered images; primary output)
        summaries/          (top9/rand9 images per cluster)
experiment/                 (experimental data, images, figures)
scripts.py {    
                main = unsupervised training (+inference for later iterations)
                twostream/dual = unsupervised training (polar + cartesian variants)
                semisupervised = supervised with weak labeling (uses labeled dataset)
                inference = inference scripts (for early iterations)
                experiments/tests = edge detection
            }

### TO RUN LATEST TRAINING SCRIPTS ###
# Installation #
Command:
    pip install -r requirements.txt

# [BEST] Run Inference: Semisupervised v4 #
Have in root:
    /path/to/input/       (data folder, same level as python script)
    /path/to/output/      (empty folder, same level as python script)
    /path/to/model.pth    (pytorch model, same level as python script)
Run:
    python inference_sup_v4.py --data_dir /path/to/input/ --ckpt /path/to/model.pth --out_dir /path/to/output/
Expect:
    /path/to/output will generate subfolders type_0/ ... type/29
    all images will be clustered into one of such. Expect some clusters to be mainly noise, and clusters will be unevenly distributed

# [BEST] Run Training: Semisupervised v4 #
Input:
    a folder with subfolders: 
        any number of "Label_xxx/(images)"
        one "Unlabeled/(images)"
        one "Noise/(images)"
Output:
    a folder with subfolders (described above)
Command:
    python semisupervised_v4.py --input_dir data/Op3176_DefectMap_Labeled --output_dir outputs/sup_v4



# Unsupervised: main_v8 TRAINING #
Input: 
    a folder of images
Output:
    a folder with subfolders (described above)
Command:
    python main_v8.py
    python inference_v8.py --input_dir data/Op3176_DefectMap --checkpoint outputs/v8/checkpoints/ckpt_100.pth --output_dir outputs/v8

# Unsupervised: v8 INFERENCE #
Have:
    /path/to/input/       (data folder, same level as python script)
    /path/to/output/      (empty folder, same level as python script)
    /path/to/model.pth    (pytorch model, same level as python script)
Run:
    python inference_sup_v4.py --input_dir /path/to/input/ --checkpoint /path/to/model.pth --output_dir /path/to/output/
Expect:
    /path/to/output will generate subfolders type_0/ ... type/19
    all images will be clustered into one of such. Expect some clusters to be mainly noise, and clusters will be unevenly distributed



# Experiments #
Input/Output: similar to above
Command:
    python edge_experiment6.py

